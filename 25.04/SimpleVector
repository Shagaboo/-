template <typename T>
class SimpleVector {
private:
    T* data;
    int size, capacity;
public:
    SimpleVector(): data(nullptr), size(0), capacity(0) {}
    
    ~SimpleVector() {
        delete[] data;
    }
    
    void push_back(const T& value) {
        if (size == capacity){
            if(capacity == 0) capacity = 1;
            else
            capacity = 2 * capacity;
            T* new_data = new T[capacity];
            for (int i = 0; i < size; i++) {
                new_data[i] = data[i];
            }
            delete[] data;
            data = new_data;
        }
        data[size++] = value;
    }
    
    T& operator[](int index) {
        return data[index];
    }
};
